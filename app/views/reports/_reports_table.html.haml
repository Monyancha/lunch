- table_class ||= nil
- table_class = Array.wrap(table_class)
- table_data ||= {}
- is_sortable = defined?(sortable) ? sortable : true
- no_wrapping ||= false
- unless no_wrapping
  - table_class << 'table-allow-wrapping'
%table.report-table{data: {sortable: is_sortable, :'disable-auto-width' => true, :'missing-data-message' => t('errors.table_data_unavailable')}, class: table_class}
  %thead
    - if table_data[:table_heading]
      %tr.table-heading-row
        %th{data: {unsortable: true}}
        %th{colspan: (table_data[:column_headings].length - 1), data: {unsortable: true}}= table_data[:table_heading]
    - if table_data[:column_sub_headings].blank?
      %tr
      - table_data[:column_headings].each_with_index do |heading, index|
        - unsortable = index != 0
        - if heading.is_a?(String)
          - title = heading
        - else
          - title = heading[:title]
          - unsortable = !heading[:sortable] if heading.has_key?(:sortable)
        %th.report-cell-narrow{data: {unsortable: unsortable}}= title
    - else
      %tr.table-heading-row
        %th{data: {unsortable: true}}
        - table_data[:column_headings].each_with_index do |heading, index|
          %th{colspan: (table_data[:column_sub_headings].length), data: {unsortable: index != 0}}= heading
      %tr
        %th.report-cell-narrow{data: {unsortable: true}}=  table_data[:column_sub_headings_first]
        - table_data[:column_headings].each do
          - table_data[:column_sub_headings].each_with_index do |sub_heading, sub_index|
            %th.report-cell-narrow{data: {unsortable: sub_index != 0}}= sub_heading
  %tbody
    - if table_data[:rows].blank? && !is_sortable
      %tr
        %td.dataTables_empty{colspan: table_data[:column_headings].count}= t('errors.table_data_unavailable')
    - else
      - table_data[:rows].each do |row|
        %tr
          -if row[:date]
            %td.report-cell-narrow= fhlb_date_standard_numeric(row[:date])
          - row[:columns].each do |column|
            = render 'reports/report_cell', cell: column
  - if table_data[:footer]
    %tfoot
      - table_data[:footer].each do |cell|
        = render 'reports/report_cell', cell: cell
