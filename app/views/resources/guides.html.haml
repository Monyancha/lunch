- @html_class = 'white-background'
.row.resource.resource-guide-page
  %h1= t('resources.guides.title')
  %p= t('resources.guides.intro')
  .resource-guides
    .resource-guide
      %h2= t('resources.guides.credit.title')
      %small= t('resources.guides.revised_at', date: fhlb_date_long_alpha(@credit_last_updated))
      = link_to_download_resource(t('global.view_pdf'), resources_download_path(file: :creditguide))
      = link_to(t('resources.guides.view_updates'), '#credit-guide-updates')

    .resource-guide
      %h2= t('resources.guides.collateral.title')
      %small= t('resources.guides.revised_at', date: fhlb_date_long_alpha(@collateral_last_updated))
      = link_to_download_resource(t('global.view_pdf'), resources_download_path(file: :collateralguide))
      = link_to(t('resources.guides.view_updates'), '#collateral-guide-updates')

    .resource-guide
      %h2= t('resources.guides.collateral_review.title')
      = link_to_download_resource(t('global.view_pdf'), resources_download_path(file: :collateralreviewguide))
  .resource-guide-updates
    - [:credit, :collateral].each do |guide|
      .resource-guide-update
        - title = t("resources.guides.#{guide}.title")
        %a{name: "#{guide}-guide-updates"}
        %h2= t('resources.guides.updates', guide: title)
        - cms_guide = instance_variable_get("@#{guide}_guide")
        - if cms_guide
          - cms_guide.revisions.each do |revision|
            %h3= t('resources.guides.revision', guide: title, date: fhlb_date_long_alpha(revision.last_updated))
            %p= t('resources.guides.replace', guide: title)
            = revision.revision_list
        - else
          - t("resources.guides.#{guide}.updates.revisions").each do |revision|
            %h3= t('resources.guides.revision', guide: title, date: fhlb_date_long_alpha(revision[:date]))
            %p= t('resources.guides.replace', guide: title)
            %ul
              - revision[:revision_list].each do |revised_item|
                %li
                  = revised_item[:description]
                  - if revised_item[:sub_list].present?
                    %ul
                      - revised_item[:sub_list].each do |list_item|
                        %li= list_item[:description]
